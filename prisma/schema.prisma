generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  username      String          @unique
  name          String?
  currency      Currency        @default(EUR)
  profileImage  String?
  wallets       Wallet[]
  loans         Loan[]
  transactions  Transaction[]
  relatedPeople RelatedPerson[]
  createdAt     DateTime        @default(now())
}

model Wallet {
  id           String        @id @default(uuid())
  name         String
  balance      Decimal       @default(0)
  currency     Currency      @default(EUR)
  icon         WalletIcon    @default(WALLET)
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id          String          @id @default(uuid())
  type        TransactionType
  amount      Decimal
  description String?
  wallet      Wallet          @relation(fields: [walletId], references: [id])
  walletId    String
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  loan        Loan?           @relation(fields: [loanId], references: [id])
  loanId      String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Loan {
  id           String        @id @default(uuid())
  direction    LoanDirection
  person       RelatedPerson @relation(fields: [personId], references: [id])
  personId     String
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model RelatedPerson {
  id        String   @id @default(uuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  loans     Loan[]
  createdAt DateTime @default(now())
}

model ExchangeRate {
  id             String   @id @default(uuid())
  baseCurrency   Currency
  targetCurrency Currency
  rate           Float
  fetchedAt      DateTime @default(now())

  @@unique([baseCurrency, targetCurrency, fetchedAt])
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum LoanDirection {
  TO_SOMEONE // You loaned money to them
  FROM_SOMEONE // They loaned money to you
}

enum Currency {
  USD
  EUR
  BAM
  RSD
  AUD
  GBP
}

enum WalletIcon {
  WALLET
  BANK
  CASH
  SAFE
  CARD
  WISE
  PAYONEER
  PAYPAL
  REVOLUT
  PIGGYBANK
  INVESTMENT
  EMERGENCY
}
